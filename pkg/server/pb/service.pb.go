// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/xdu31/test-server/pkg/server/pb/service.proto

package pb

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	query "github.com/infobloxopen/atlas-app-toolkit/query"
	_ "github.com/infobloxopen/protoc-gen-preprocess/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// TypeWithID demonstrates some basic assocation behavior
type Ip struct {
	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IpAddress string `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// The time when this Ip object was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// The time when this Ip object was last updated.
	UpdatedTime          *timestamp.Timestamp `protobuf:"bytes,4,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Ip) Reset()         { *m = Ip{} }
func (m *Ip) String() string { return proto.CompactTextString(m) }
func (*Ip) ProtoMessage()    {}
func (*Ip) Descriptor() ([]byte, []int) {
	return fileDescriptor_045d922b8eb141ee, []int{0}
}

func (m *Ip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ip.Unmarshal(m, b)
}
func (m *Ip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ip.Marshal(b, m, deterministic)
}
func (m *Ip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ip.Merge(m, src)
}
func (m *Ip) XXX_Size() int {
	return xxx_messageInfo_Ip.Size(m)
}
func (m *Ip) XXX_DiscardUnknown() {
	xxx_messageInfo_Ip.DiscardUnknown(m)
}

var xxx_messageInfo_Ip proto.InternalMessageInfo

func (m *Ip) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Ip) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *Ip) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *Ip) GetUpdatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedTime
	}
	return nil
}

type CreateIpRequest struct {
	Payload              *Ip      `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateIpRequest) Reset()         { *m = CreateIpRequest{} }
func (m *CreateIpRequest) String() string { return proto.CompactTextString(m) }
func (*CreateIpRequest) ProtoMessage()    {}
func (*CreateIpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_045d922b8eb141ee, []int{1}
}

func (m *CreateIpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIpRequest.Unmarshal(m, b)
}
func (m *CreateIpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIpRequest.Marshal(b, m, deterministic)
}
func (m *CreateIpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIpRequest.Merge(m, src)
}
func (m *CreateIpRequest) XXX_Size() int {
	return xxx_messageInfo_CreateIpRequest.Size(m)
}
func (m *CreateIpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIpRequest proto.InternalMessageInfo

func (m *CreateIpRequest) GetPayload() *Ip {
	if m != nil {
		return m.Payload
	}
	return nil
}

type CreateIpResponse struct {
	Result               *Ip      `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateIpResponse) Reset()         { *m = CreateIpResponse{} }
func (m *CreateIpResponse) String() string { return proto.CompactTextString(m) }
func (*CreateIpResponse) ProtoMessage()    {}
func (*CreateIpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_045d922b8eb141ee, []int{2}
}

func (m *CreateIpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIpResponse.Unmarshal(m, b)
}
func (m *CreateIpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIpResponse.Marshal(b, m, deterministic)
}
func (m *CreateIpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIpResponse.Merge(m, src)
}
func (m *CreateIpResponse) XXX_Size() int {
	return xxx_messageInfo_CreateIpResponse.Size(m)
}
func (m *CreateIpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIpResponse proto.InternalMessageInfo

func (m *CreateIpResponse) GetResult() *Ip {
	if m != nil {
		return m.Result
	}
	return nil
}

type ReadIpRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadIpRequest) Reset()         { *m = ReadIpRequest{} }
func (m *ReadIpRequest) String() string { return proto.CompactTextString(m) }
func (*ReadIpRequest) ProtoMessage()    {}
func (*ReadIpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_045d922b8eb141ee, []int{3}
}

func (m *ReadIpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadIpRequest.Unmarshal(m, b)
}
func (m *ReadIpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadIpRequest.Marshal(b, m, deterministic)
}
func (m *ReadIpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadIpRequest.Merge(m, src)
}
func (m *ReadIpRequest) XXX_Size() int {
	return xxx_messageInfo_ReadIpRequest.Size(m)
}
func (m *ReadIpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadIpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadIpRequest proto.InternalMessageInfo

func (m *ReadIpRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadIpResponse struct {
	Result               *Ip      `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadIpResponse) Reset()         { *m = ReadIpResponse{} }
func (m *ReadIpResponse) String() string { return proto.CompactTextString(m) }
func (*ReadIpResponse) ProtoMessage()    {}
func (*ReadIpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_045d922b8eb141ee, []int{4}
}

func (m *ReadIpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadIpResponse.Unmarshal(m, b)
}
func (m *ReadIpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadIpResponse.Marshal(b, m, deterministic)
}
func (m *ReadIpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadIpResponse.Merge(m, src)
}
func (m *ReadIpResponse) XXX_Size() int {
	return xxx_messageInfo_ReadIpResponse.Size(m)
}
func (m *ReadIpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadIpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadIpResponse proto.InternalMessageInfo

func (m *ReadIpResponse) GetResult() *Ip {
	if m != nil {
		return m.Result
	}
	return nil
}

type UpdateIpRequest struct {
	Payload *Ip `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// Field Mask.
	Fields               *field_mask.FieldMask `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateIpRequest) Reset()         { *m = UpdateIpRequest{} }
func (m *UpdateIpRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateIpRequest) ProtoMessage()    {}
func (*UpdateIpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_045d922b8eb141ee, []int{5}
}

func (m *UpdateIpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateIpRequest.Unmarshal(m, b)
}
func (m *UpdateIpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateIpRequest.Marshal(b, m, deterministic)
}
func (m *UpdateIpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateIpRequest.Merge(m, src)
}
func (m *UpdateIpRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateIpRequest.Size(m)
}
func (m *UpdateIpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateIpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateIpRequest proto.InternalMessageInfo

func (m *UpdateIpRequest) GetPayload() *Ip {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *UpdateIpRequest) GetFields() *field_mask.FieldMask {
	if m != nil {
		return m.Fields
	}
	return nil
}

type UpdateIpResponse struct {
	Result               *Ip      `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateIpResponse) Reset()         { *m = UpdateIpResponse{} }
func (m *UpdateIpResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateIpResponse) ProtoMessage()    {}
func (*UpdateIpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_045d922b8eb141ee, []int{6}
}

func (m *UpdateIpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateIpResponse.Unmarshal(m, b)
}
func (m *UpdateIpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateIpResponse.Marshal(b, m, deterministic)
}
func (m *UpdateIpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateIpResponse.Merge(m, src)
}
func (m *UpdateIpResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateIpResponse.Size(m)
}
func (m *UpdateIpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateIpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateIpResponse proto.InternalMessageInfo

func (m *UpdateIpResponse) GetResult() *Ip {
	if m != nil {
		return m.Result
	}
	return nil
}

type DeleteIpRequest struct {
	Ids                  []int32  `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIpRequest) Reset()         { *m = DeleteIpRequest{} }
func (m *DeleteIpRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteIpRequest) ProtoMessage()    {}
func (*DeleteIpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_045d922b8eb141ee, []int{7}
}

func (m *DeleteIpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIpRequest.Unmarshal(m, b)
}
func (m *DeleteIpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIpRequest.Marshal(b, m, deterministic)
}
func (m *DeleteIpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIpRequest.Merge(m, src)
}
func (m *DeleteIpRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteIpRequest.Size(m)
}
func (m *DeleteIpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIpRequest proto.InternalMessageInfo

func (m *DeleteIpRequest) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type DeleteIpResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIpResponse) Reset()         { *m = DeleteIpResponse{} }
func (m *DeleteIpResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteIpResponse) ProtoMessage()    {}
func (*DeleteIpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_045d922b8eb141ee, []int{8}
}

func (m *DeleteIpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIpResponse.Unmarshal(m, b)
}
func (m *DeleteIpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIpResponse.Marshal(b, m, deterministic)
}
func (m *DeleteIpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIpResponse.Merge(m, src)
}
func (m *DeleteIpResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteIpResponse.Size(m)
}
func (m *DeleteIpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIpResponse proto.InternalMessageInfo

type ListIpsRequest struct {
	Filter               *query.Filtering      `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Fields               *query.FieldSelection `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListIpsRequest) Reset()         { *m = ListIpsRequest{} }
func (m *ListIpsRequest) String() string { return proto.CompactTextString(m) }
func (*ListIpsRequest) ProtoMessage()    {}
func (*ListIpsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_045d922b8eb141ee, []int{9}
}

func (m *ListIpsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIpsRequest.Unmarshal(m, b)
}
func (m *ListIpsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIpsRequest.Marshal(b, m, deterministic)
}
func (m *ListIpsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIpsRequest.Merge(m, src)
}
func (m *ListIpsRequest) XXX_Size() int {
	return xxx_messageInfo_ListIpsRequest.Size(m)
}
func (m *ListIpsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIpsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListIpsRequest proto.InternalMessageInfo

func (m *ListIpsRequest) GetFilter() *query.Filtering {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ListIpsRequest) GetFields() *query.FieldSelection {
	if m != nil {
		return m.Fields
	}
	return nil
}

type ListIpsResponse struct {
	Results              []*Ip    `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIpsResponse) Reset()         { *m = ListIpsResponse{} }
func (m *ListIpsResponse) String() string { return proto.CompactTextString(m) }
func (*ListIpsResponse) ProtoMessage()    {}
func (*ListIpsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_045d922b8eb141ee, []int{10}
}

func (m *ListIpsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIpsResponse.Unmarshal(m, b)
}
func (m *ListIpsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIpsResponse.Marshal(b, m, deterministic)
}
func (m *ListIpsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIpsResponse.Merge(m, src)
}
func (m *ListIpsResponse) XXX_Size() int {
	return xxx_messageInfo_ListIpsResponse.Size(m)
}
func (m *ListIpsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIpsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListIpsResponse proto.InternalMessageInfo

func (m *ListIpsResponse) GetResults() []*Ip {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*Ip)(nil), "service.Ip")
	proto.RegisterType((*CreateIpRequest)(nil), "service.CreateIpRequest")
	proto.RegisterType((*CreateIpResponse)(nil), "service.CreateIpResponse")
	proto.RegisterType((*ReadIpRequest)(nil), "service.ReadIpRequest")
	proto.RegisterType((*ReadIpResponse)(nil), "service.ReadIpResponse")
	proto.RegisterType((*UpdateIpRequest)(nil), "service.UpdateIpRequest")
	proto.RegisterType((*UpdateIpResponse)(nil), "service.UpdateIpResponse")
	proto.RegisterType((*DeleteIpRequest)(nil), "service.DeleteIpRequest")
	proto.RegisterType((*DeleteIpResponse)(nil), "service.DeleteIpResponse")
	proto.RegisterType((*ListIpsRequest)(nil), "service.ListIpsRequest")
	proto.RegisterType((*ListIpsResponse)(nil), "service.ListIpsResponse")
}

func init() {
	proto.RegisterFile("github.com/xdu31/test-server/pkg/server/pb/service.proto", fileDescriptor_045d922b8eb141ee)
}

var fileDescriptor_045d922b8eb141ee = []byte{
	// 778 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xdd, 0x6a, 0xdb, 0x48,
	0x14, 0x5e, 0xc9, 0x3f, 0x89, 0xc7, 0xbb, 0xb1, 0x77, 0x58, 0x36, 0x8e, 0x48, 0x58, 0xa3, 0x25,
	0x60, 0xcc, 0x5a, 0xda, 0x75, 0x36, 0x34, 0xa4, 0x37, 0xb5, 0x1b, 0x02, 0x0e, 0x2d, 0x05, 0xa5,
	0xed, 0x45, 0x29, 0x98, 0xb1, 0x35, 0x51, 0x07, 0xcb, 0x9a, 0x89, 0x66, 0x9c, 0xc6, 0x94, 0xdc,
	0xf4, 0x11, 0xd2, 0x77, 0xe9, 0x45, 0xae, 0xfa, 0x0a, 0xa5, 0xf4, 0x0d, 0x7a, 0xd3, 0xb7, 0x28,
	0xd2, 0x8c, 0x2c, 0xf9, 0x27, 0x50, 0xdf, 0x8d, 0xe6, 0x3b, 0xe7, 0x3b, 0xdf, 0x39, 0xe7, 0x1b,
	0x04, 0x8e, 0x3c, 0x22, 0xde, 0x4c, 0x06, 0xd6, 0x90, 0x8e, 0xed, 0x6b, 0x77, 0x72, 0xf0, 0x9f,
	0x2d, 0x30, 0x17, 0x2d, 0x8e, 0xc3, 0x2b, 0x1c, 0xda, 0x6c, 0xe4, 0xd9, 0xc9, 0x71, 0x10, 0x9f,
	0xc8, 0x10, 0x5b, 0x2c, 0xa4, 0x82, 0xc2, 0x0d, 0xf5, 0x69, 0xec, 0x7a, 0x94, 0x7a, 0x3e, 0xb6,
	0x11, 0x23, 0x36, 0x0a, 0x02, 0x2a, 0x90, 0x20, 0x34, 0xe0, 0x32, 0xcc, 0xf8, 0x4b, 0xa1, 0xf1,
	0xd7, 0x60, 0x72, 0x61, 0x0b, 0x32, 0xc6, 0x5c, 0xa0, 0x31, 0x53, 0x01, 0x9d, 0x8c, 0x02, 0x1c,
	0x5c, 0xd1, 0x29, 0x0b, 0xe9, 0xf5, 0x54, 0xc6, 0x0f, 0x5b, 0x1e, 0x0e, 0x5a, 0x57, 0xc8, 0x27,
	0x2e, 0x12, 0xd8, 0x5e, 0x3a, 0x28, 0x8a, 0x7f, 0x32, 0xc1, 0xfc, 0x2d, 0xf2, 0x3c, 0x1c, 0xda,
	0x94, 0xc5, 0x2a, 0x56, 0x28, 0x3a, 0xcb, 0x14, 0x24, 0xc1, 0x05, 0x1d, 0xf8, 0xf4, 0x9a, 0x32,
	0x1c, 0xd8, 0x48, 0xf8, 0x88, 0xb7, 0x10, 0x63, 0x2d, 0x41, 0xa9, 0x3f, 0x22, 0xc2, 0xbe, 0x9c,
	0xe0, 0x70, 0x6a, 0x0f, 0xa9, 0xef, 0xe3, 0x61, 0x44, 0xd1, 0xa7, 0x0c, 0x87, 0x48, 0xd0, 0x30,
	0xe1, 0x3a, 0xbd, 0x8f, 0x2b, 0xa3, 0x88, 0x85, 0x98, 0x85, 0x74, 0x88, 0x39, 0x9f, 0x89, 0x4a,
	0xaf, 0x14, 0x4f, 0x7d, 0x71, 0x4a, 0x17, 0x04, 0xfb, 0x6e, 0x7f, 0x8c, 0xf8, 0x48, 0x46, 0x98,
	0x5f, 0x35, 0xa0, 0xf7, 0x18, 0xdc, 0x01, 0x3a, 0x71, 0x6b, 0x5a, 0x5d, 0x6b, 0x14, 0xba, 0xa5,
	0xbb, 0xef, 0x9f, 0x72, 0x79, 0x43, 0x6f, 0xfc, 0xe2, 0xe8, 0xc4, 0x85, 0x7b, 0x00, 0x10, 0xd6,
	0x47, 0xae, 0x1b, 0x62, 0xce, 0x6b, 0x7a, 0x5d, 0x6b, 0x94, 0x9c, 0x12, 0x61, 0x1d, 0x79, 0x01,
	0x4f, 0xc0, 0xaf, 0xc3, 0x10, 0x23, 0x81, 0xdd, 0x7e, 0xb4, 0x82, 0x5a, 0xae, 0xae, 0x35, 0xca,
	0x6d, 0xc3, 0x92, 0x95, 0xad, 0xa4, 0xb2, 0xf5, 0x3c, 0xd9, 0x4f, 0xb7, 0x70, 0xdb, 0xd1, 0x1f,
	0x69, 0x4e, 0x59, 0xa5, 0x45, 0x40, 0xc4, 0x32, 0x61, 0x6e, 0xca, 0x92, 0xff, 0x69, 0x16, 0x95,
	0x16, 0x01, 0xc7, 0xa5, 0xbb, 0x8f, 0x85, 0x02, 0xc8, 0x01, 0x4d, 0x33, 0x8f, 0x40, 0xe5, 0x71,
	0xcc, 0xdf, 0x63, 0x0e, 0xbe, 0x9c, 0x60, 0x2e, 0xe0, 0x3e, 0xd8, 0x60, 0x68, 0xea, 0x53, 0x24,
	0x1b, 0x2d, 0xb7, 0xcb, 0x56, 0x62, 0xbd, 0x1e, 0x73, 0x12, 0xcc, 0x7c, 0x00, 0xaa, 0x69, 0x26,
	0x67, 0x34, 0xe0, 0x18, 0xfe, 0x0d, 0x8a, 0x21, 0xe6, 0x13, 0x5f, 0xac, 0xca, 0x54, 0x90, 0xd9,
	0x04, 0xbf, 0x39, 0x18, 0xb9, 0x69, 0xc1, 0xfb, 0x87, 0x6a, 0x1e, 0x82, 0xad, 0x24, 0x76, 0x9d,
	0x12, 0x3e, 0xa8, 0xbc, 0x88, 0xfb, 0x5d, 0xb7, 0x2b, 0xd8, 0x06, 0xc5, 0x78, 0xf7, 0x72, 0x83,
	0xab, 0x46, 0x7b, 0x1a, 0xc1, 0x4f, 0x11, 0x1f, 0x39, 0x2a, 0x32, 0x9a, 0x44, 0x5a, 0x6d, 0x1d,
	0x99, 0x87, 0xa0, 0x72, 0x82, 0x7d, 0x9c, 0x95, 0x69, 0x82, 0x1c, 0x71, 0x79, 0x4d, 0xab, 0xe7,
	0x1a, 0x85, 0x6e, 0x35, 0x1a, 0x46, 0xf9, 0x56, 0xdb, 0xac, 0x69, 0xa6, 0x9c, 0x49, 0x04, 0x9a,
	0x10, 0x54, 0xd3, 0x34, 0x59, 0xcf, 0xbc, 0x01, 0x5b, 0x4f, 0x08, 0x17, 0x3d, 0xc6, 0x13, 0x26,
	0x3b, 0xea, 0xc4, 0x17, 0x38, 0x54, 0x9d, 0x6c, 0x5b, 0xc9, 0x0b, 0xb1, 0x10, 0x23, 0xd6, 0x69,
	0x8c, 0x91, 0xc0, 0x73, 0x54, 0x18, 0xfc, 0x7f, 0xd6, 0xba, 0xf4, 0xe6, 0xee, 0x62, 0x02, 0xf6,
	0xdd, 0x73, 0xac, 0x9e, 0x62, 0xd2, 0xfc, 0x59, 0x7e, 0x53, 0xab, 0xea, 0x91, 0x8d, 0x66, 0xe5,
	0xd5, 0x04, 0xf6, 0xc1, 0x86, 0x6c, 0x53, 0x76, 0xb3, 0x38, 0x70, 0x85, 0xb5, 0x3f, 0xe7, 0x40,
	0xa9, 0xc7, 0xce, 0x25, 0x02, 0x5f, 0x83, 0xa2, 0x34, 0x15, 0xac, 0xcd, 0xa2, 0x17, 0xfc, 0x69,
	0xec, 0xac, 0x40, 0xd4, 0x14, 0xf6, 0x6e, 0x3b, 0x05, 0x90, 0x23, 0x8c, 0xbf, 0xff, 0xf2, 0xed,
	0x83, 0x5e, 0x31, 0xf3, 0x36, 0x61, 0xfc, 0x78, 0xb6, 0x5c, 0x07, 0xe4, 0x23, 0x37, 0xc1, 0x3f,
	0x67, 0x0c, 0x73, 0x46, 0x34, 0xb6, 0x97, 0xee, 0x15, 0xef, 0xce, 0x1c, 0x6f, 0x19, 0x96, 0x22,
	0x5e, 0xfb, 0x1d, 0x71, 0x6f, 0x20, 0x01, 0x45, 0xb9, 0xfc, 0x8c, 0xe2, 0x05, 0xef, 0x65, 0x14,
	0x2f, 0xfa, 0xc4, 0x6c, 0xce, 0x31, 0xef, 0x1a, 0xbf, 0x4b, 0x66, 0xa5, 0xd8, 0x22, 0xee, 0x4d,
	0x2a, 0xff, 0x25, 0x28, 0xca, 0xbd, 0x67, 0x4a, 0x2d, 0xf8, 0x27, 0x53, 0x6a, 0xc9, 0x22, 0xdb,
	0x73, 0xa5, 0x4a, 0x4d, 0x39, 0x1c, 0xad, 0x09, 0x9f, 0x81, 0x7c, 0xb4, 0x3c, 0x98, 0xb6, 0x3f,
	0x6f, 0x25, 0xa3, 0xb6, 0x0c, 0x28, 0xce, 0x3f, 0xe6, 0x38, 0x8b, 0x30, 0xe6, 0xec, 0xfe, 0xfb,
	0xca, 0x5a, 0xe3, 0xbf, 0xf6, 0x90, 0x0d, 0x06, 0xc5, 0xf8, 0x79, 0x1d, 0xfc, 0x08, 0x00, 0x00,
	0xff, 0xff, 0x75, 0xb4, 0xfd, 0x2b, 0x10, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IpServiceClient is the client API for IpService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IpServiceClient interface {
	Create(ctx context.Context, in *CreateIpRequest, opts ...grpc.CallOption) (*CreateIpResponse, error)
	Read(ctx context.Context, in *ReadIpRequest, opts ...grpc.CallOption) (*ReadIpResponse, error)
	Update(ctx context.Context, in *UpdateIpRequest, opts ...grpc.CallOption) (*UpdateIpResponse, error)
	Delete(ctx context.Context, in *DeleteIpRequest, opts ...grpc.CallOption) (*DeleteIpResponse, error)
	List(ctx context.Context, in *ListIpsRequest, opts ...grpc.CallOption) (*ListIpsResponse, error)
}

type ipServiceClient struct {
	cc *grpc.ClientConn
}

func NewIpServiceClient(cc *grpc.ClientConn) IpServiceClient {
	return &ipServiceClient{cc}
}

func (c *ipServiceClient) Create(ctx context.Context, in *CreateIpRequest, opts ...grpc.CallOption) (*CreateIpResponse, error) {
	out := new(CreateIpResponse)
	err := c.cc.Invoke(ctx, "/service.IpService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipServiceClient) Read(ctx context.Context, in *ReadIpRequest, opts ...grpc.CallOption) (*ReadIpResponse, error) {
	out := new(ReadIpResponse)
	err := c.cc.Invoke(ctx, "/service.IpService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipServiceClient) Update(ctx context.Context, in *UpdateIpRequest, opts ...grpc.CallOption) (*UpdateIpResponse, error) {
	out := new(UpdateIpResponse)
	err := c.cc.Invoke(ctx, "/service.IpService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipServiceClient) Delete(ctx context.Context, in *DeleteIpRequest, opts ...grpc.CallOption) (*DeleteIpResponse, error) {
	out := new(DeleteIpResponse)
	err := c.cc.Invoke(ctx, "/service.IpService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ipServiceClient) List(ctx context.Context, in *ListIpsRequest, opts ...grpc.CallOption) (*ListIpsResponse, error) {
	out := new(ListIpsResponse)
	err := c.cc.Invoke(ctx, "/service.IpService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IpServiceServer is the server API for IpService service.
type IpServiceServer interface {
	Create(context.Context, *CreateIpRequest) (*CreateIpResponse, error)
	Read(context.Context, *ReadIpRequest) (*ReadIpResponse, error)
	Update(context.Context, *UpdateIpRequest) (*UpdateIpResponse, error)
	Delete(context.Context, *DeleteIpRequest) (*DeleteIpResponse, error)
	List(context.Context, *ListIpsRequest) (*ListIpsResponse, error)
}

func RegisterIpServiceServer(s *grpc.Server, srv IpServiceServer) {
	s.RegisterService(&_IpService_serviceDesc, srv)
}

func _IpService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.IpService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpServiceServer).Create(ctx, req.(*CreateIpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadIpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.IpService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpServiceServer).Read(ctx, req.(*ReadIpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateIpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.IpService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpServiceServer).Update(ctx, req.(*UpdateIpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.IpService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpServiceServer).Delete(ctx, req.(*DeleteIpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IpService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIpsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IpServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.IpService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IpServiceServer).List(ctx, req.(*ListIpsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IpService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.IpService",
	HandlerType: (*IpServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _IpService_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _IpService_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _IpService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _IpService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _IpService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/xdu31/test-server/pkg/server/pb/service.proto",
}
