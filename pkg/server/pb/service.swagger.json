{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "github.com/xdu31/test-server/pkg/server/pb/service.proto",
    "version": "version not set"
  },
  "paths": {
    "/ips": {
      "get": {
        "tags": [
          "ips"
        ],
        "operationId": "ipsList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/serviceListIpsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ips"
        ],
        "operationId": "ipsCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceIp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/serviceCreateIpResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ips"
        ],
        "operationId": "ipsDelete",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceDeleteIpRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/ips/{id}": {
      "get": {
        "tags": [
          "ips"
        ],
        "operationId": "ipsRead",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/serviceReadIpResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ips"
        ],
        "operationId": "ipsUpdate",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceIp"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "PUT operation response",
            "schema": {
              "$ref": "#/definitions/serviceUpdateIpResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "serviceCreateIpResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/serviceIp"
        }
      }
    },
    "serviceDeleteIpRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "serviceIp": {
      "description": "TypeWithID demonstrates some basic assocation behavior",
      "type": "object",
      "properties": {
        "created_time": {
          "description": "The time when this Ip object was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "ip_address": {
          "type": "string"
        },
        "updated_time": {
          "description": "The time when this Ip object was last updated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "serviceListIpsResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/serviceIp"
          }
        }
      }
    },
    "serviceReadIpResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/serviceIp"
        }
      }
    },
    "serviceUpdateIpResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/serviceIp"
        }
      }
    }
  }
}
